{
  "entities": {
    "User": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "User",
      "type": "object",
      "description": "Represents a user of the ReceIT application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the user entity."
        },
        "email": {
          "type": "string",
          "description": "Email address of the user.",
          "format": "email"
        },
        "name": {
          "type": "string",
          "description": "The user's display name."
        }
      },
      "required": [
        "id",
        "email",
        "name"
      ]
    },
    "Receit": {
      "$schema": "http://json-schema.org/draft-07/schema#",
      "title": "Receit",
      "type": "object",
      "description": "Represents a task or 'ReceIT' in the application.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for the ReceIT entity."
        },
        "userId": {
          "type": "string",
          "description": "Reference to User. (Relationship: User 1:N Receit)"
        },
        "title": {
          "type": "string",
          "description": "Title of the ReceIT."
        },
        "description": {
          "type": "string",
          "description": "Detailed description of the ReceIT."
        },
        "priority": {
          "type": "string",
          "description": "Priority level of the ReceIT (e.g., Low, Medium, High)."
        },
        "category": {
          "type": "string",
          "description": "Category to which the ReceIT belongs (e.g., Marketing, Development, Personal)."
        },
        "estimatedPoints": {
          "type": "number",
          "description": "Estimated effort points required for the ReceIT."
        },
        "startDate": {
          "type": "string",
          "description": "Start date of the ReceIT.",
          "format": "date-time"
        },
        "dueDate": {
          "type": "string",
          "description": "Due date of the ReceIT.",
          "format": "date-time"
        },
        "dependentReceitIds": {
          "type": "array",
          "description": "References to other Receits that this Receit depends on. (Relationship: Receit N:N Receit)",
          "items": {
            "type": "string"
          }
        },
        "completed": {
          "type": "boolean",
          "description": "Indicates whether the ReceIT is completed or not."
        }
      },
      "required": [
        "id",
        "userId",
        "title",
        "description",
        "priority",
        "category",
        "estimatedPoints",
        "startDate",
        "dueDate",
        "completed"
      ]
    }
  },
  "auth": {
    "providers": [
      "password",
      "anonymous"
    ]
  },
  "firestore": {
    "structure": [
      {
        "path": "/users/{userId}",
        "definition": {
          "entityName": "User",
          "schema": {
            "$ref": "#/backend/entities/User"
          },
          "description": "Stores user profile information. The 'userId' is the Firebase Authentication UID, ensuring secure identification and access control. The id field on the User document will match the {userId} path parameter.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user, corresponding to their Firebase Auth UID."
            }
          ]
        }
      },
      {
        "path": "/users/{userId}/receits/{receitId}",
        "definition": {
          "entityName": "Receit",
          "schema": {
            "$ref": "#/backend/entities/Receit"
          },
          "description": "Stores Receit data associated with a specific user.  Path-based ownership ensures that only the user with the matching 'userId' can access the Receit. The userId on the Receit document will match the {userId} path parameter.",
          "params": [
            {
              "name": "userId",
              "description": "The unique identifier for the user who owns the Receit."
            },
            {
              "name": "receitId",
              "description": "The unique identifier for the Receit document."
            }
          ]
        }
      }
    ],
    "reasoning": "The Firestore structure is designed to ensure Authorization Independence, support QAPs (Queries are not Filters), and maintain data clarity.  It leverages path-based ownership for user-specific data. Receit documents are stored within user-specific collections to facilitate easy querying and access control. User data is stored at the root level for global access, while Receit data is namespaced under the user for clear ownership. This approach ensures atomic operations, simplifies security rules, and makes debugging straightforward.  The structure also implicitly supports list operations restricted to the logged-in user's Receit documents via the path-based ownership."
  }
}